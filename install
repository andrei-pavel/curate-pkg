#!/bin/bash

# Copyright (C) 2017-2018 Andrei Pavel, andrei.pavel@cti.pub.ro
# Licensed under the MIT License

# Fail script if any command fails.
set -eu

# Print usage function.
printUsage() {
printf "\
Usage: $(basename "${0}") [options]
Options:
  [-d|--debug]
  [-h|--help]
"
}

# Traps
# shellcheck disable=SC2154
trap 'return_code=${?}; trap - EXIT; echo EXIT ${return_code}' EXIT
trap 'return_code=${?}; trap - EXIT; echo HUP ${return_code}' HUP
trap 'return_code=${?}; trap - EXIT; echo INT ${return_code}' INT
trap 'return_code=${?}; trap - EXIT; echo QUIT ${return_code}' QUIT
trap 'return_code=${?}; trap - EXIT; echo PIPE ${return_code}' PIPE
trap 'return_code=${?}; trap - EXIT; echo TERM ${return_code}' TERM
trap 'trap - EXIT; echo QUIT' QUIT

# Get script path and append it to PATH so other scripts are callable.
script_path="$(dirname "${0}")"
PATH="${PATH}:${script_path}"

# Parse arguments.
while [[ ${#} -ge 1 ]]; do
  # Debug mode
  if [[ "${1}" == "-d" || "${1}" == "--debug" ]]; then
    shift
    set -x
    continue
  fi
  # Help: display usage
  if [[ "${1}" == "-h" || "${1}" == "--help" ]]; then
    shift
    printUsage
    exit 0
  fi
  # Unrecognized argument.
  printf "\e[1m\e[31mERROR: Unrecognized argument %s.\e[0m\e[0m\n" "${1}" >&2
  printUsage
  exit 1
done

pushd ${script_path} > /dev/null
{
  mkdir -p ${HOME}/.config/curate-pkg
  for package_manager in apt brew dnf eopkg flatpak go nix npm pacman snap; do
    if command -v ${package_manager} &> /dev/null; then
      if [[ ! -f ${HOME}/.config/curate-pkg/${package_manager}.yaml ]]; then
        install ${script_path}/share/empty.yaml ${HOME}/.config/curate-pkg/${package_manager}.yaml
      fi
    fi
  done

  # Needs to run as root but keep ${HOME}
  (( EUID != 0 )) && exec sudo -H ./install_with_sudo
}
popd > /dev/null


